version: '3'

dotenv:
  - .env

tasks:
  up:
    cmds:
      - task: docker:create-network
      - docker compose up -d
      - task: kafka:create-topic
  down:
    cmds:
      - docker compose down --remove-orphans
      - task: docker:elasticsearch-down
      - task: docker:kafka-down
      - task: docker:delete-network

  docker:create-network:
    cmds:
      - docker network inspect elasticsearch-poc > /dev/null 2>&1 || docker network create elasticsearch-poc 

  docker:delete-network:
    cmds:
      - docker network inspect elasticsearch-poc > /dev/null 2>&1 || docker network remove elasticsearch-poc 

  kafka:create-topic:
    cmds:
      - |
        docker compose exec -t broker \
          kafka-topics --create \
            --topic liquorsales \
            --bootstrap-server broker:9092 \
            --partitions 1 \
            --replication-factor 1 \
            --if-not-exists

  logstash:elasticsearch:
    dir: ./logstash-elasticsearch
    cmds:
      - docker compose up -d --build

  logstash:kafka:
    dir: ./logstash-kafka
    cmds:
      - docker compose up -d --build

  docker:elasticsearch-down:
    dir: ./logstash-elasticsearch
    cmds:
      - docker compose down --remove-orphans

  docker:kafka-down:
    dir: ./logstash-kafka
    cmds:
      - docker compose down --remove-orphans

  kafka:connector:
    cmds:
      - curl -X DELETE http://localhost:8083/connectors/opensearch-sink-connector
      - sleep 3; echo "now recreating the connector"
      - |
        cat <<EOF | curl -X POST -H "Content-Type: application/json" \
            --data @- \
            http://localhost:8083/connectors
        {
          "name": "opensearch-sink-connector",
          "config": {
            "connector.class": "io.aiven.kafka.connect.opensearch.OpensearchSinkConnector",
            "tasks.max": "1",
            "topics": "liquorsales",
            "connection.url": "http://opensearch:9200",
            "type.name": "_doc",
            "key.ignore": "true",
            "schema.ignore": "true",
            "behavior.on.malformed.documents": "warn",
            "errors.tolerance": "all",
            "errors.log.enable": "true",
            "errors.log.include.messages": "true",
            "key.converter": "org.apache.kafka.connect.json.JsonConverter",
            "key.converter.schemas.enable": "false",
            "value.converter": "org.apache.kafka.connect.json.JsonConverter",
            "value.converter.schemas.enable": "false"
          }
        }
        EOF

